name: Android CI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: '0.7.83'
      branch:
        description: 'Branch to build'
        required: true
        default: 'master'
      changelog:
        description: 'Changelog for the release'
        required: false

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        ref: ${{ github.event.inputs.branch }}
        
    - name: Generate Gradle Wrapper
      run: |
        cd libmediainfo_0.7.83
        gradle wrapper
        
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Cache Gradle files
      uses: actions/cache@v4
      with:
        path: ~/.gradle/cache
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Install Android SDK
      uses: android-actions/setup-android@v2
      with:
        android-version: 29
        
    - name: Build ARM7 APK
      run: ./libmediainfo_0.7.83/gradlew :libmediainfo_0.7.83:assembleDebug -PcpuArchitecture=armeabi-v7a
      
    - name: Build ARM64-V8A APK
      run: ./libmediainfo_0.7.83/gradlew :libmediainfo_0.7.83:assembleDebug -PcpuArchitecture=arm64-v8a
      
    - name: Upload ARM7 APK
      uses: actions/upload-artifact@v4
      with:
        name: app-arm7-${{ github.event.inputs.version }}
        path: libmediainfo_0.7.83/build/outputs/apk/debug/libmediainfo_0.7.83-armeabi-v7a-debug.apk
        
    - name: Upload ARM64-V8A APK
      uses: actions/upload-artifact@v4
      with:
        name: app-arm64-v8a-${{ github.event.inputs.version }}
        path: libmediainfo_0.7.83/build/outputs/apk/debug/libmediainfo_0.7.83-arm64-v8a-debug.apk
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        body: ${{ github.event.inputs.changelog }}
        draft: false
        prerelease: false
